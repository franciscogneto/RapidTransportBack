Fuso horário:
-> condifuração do fuso horário - ok - SP

Idioma - pr-br:
-> confifuração do idioma padrão - ok

Banco de dados - PostGres:
-> configuração no back - ok
-> local - ok

Modelos:
->Empresa - ok
->Veiculo - ok
->Funcionario - ok

Serializers:
->Empresa - ok
->Usuário - ok
->Veiculo - ok
->funcionario - ok

Desacoplamento - ok
-> /api/...

Corsheaders:
-> configuração dos métodos que podem ser realizados - ok
-> configuração de onde pode ser acessado os dados - ok

GIT:
->inserido no git - ok
->atualizado no git - ok

Segurança - JWT:
->configuração inicial do jwt - ok 
->configuração profunda do jwt -  x
->pegar token e refresh - ok api/token/
->refresh - ok api/token/refresh/

Testes - aplicado.

Modelos - Usuário:
-> criação de um usuário para logar no sistema - ok
-> múltiplos papeis - ok funcionário/empresa

Veículo: OK
->pegar todos veículos - ok GET api/veiculos/
->adicionar um veículo - ok POST api/veiculos/
->alterar um veículo - ok PUT api/veiculos/{id}
->deletar um veículo - ok DELETE api/veiculos/{id}

Funcionário:
->pegar todos funcionários - ok GET api/funcionarios/
->adicionar um funcionário - ok POST api/funcionarios/
->alterar um funcionário - ok PUT api/funcionarios/{id}
->deletar um funcionário - ok DELETE api/funcionarios/{id}

relatório:
->pegar relatórios -> GET api/relatorios/
->criar relatório -> criar item - ok POST api/relatorios/
->pegar relatório específico -> ok GET api/relatorios/{id}/
->apagar relatório - DELETE api/relatorios/{id}/

item:
-> apagar item -> ok -> DELETE api/item/{id}/ -- por enquanto é esse caminho

revisão:
-> pegar revisões de um veículo -> ok -> GET api/revisoes/{id_veiculo}
-> inserir uma revisão de um veículo -> ok -> POST api/revisoes/{id_veiculo}
-> pegar uma revisão em específico de um veículo -> ok -> GET api/revisao/{id_revisao}

viagem:
-> listar todas as viagens -> ok -> GET api/viagens/
-> criar uma viagem -> -> POST api/viagens/ -- cria relatorio_viagem com os campos [observacao, data_preenchimento com null]
-> excluir uma viagens -> ok -> DELETE api/viagens/{id}


o que faltou:
-> começar e finalizar a parte do motorista (preencher relatórios, alterar senha, encerrar viagem)
-> avisos tanto para empresa quanto funcionário
-> opção para mudar senha de uma empresa

{
"cnpj":"6542476000137",
"nome":"EmpresaTeste10",
"endereco":"Rua Augusta, 167",
"telefone":"15-6413244"
}

{
"empresa": 2,
"nome": "Marcio Veloso",
"data_admissao": "2020-10-10",
"data_aniversario": "2000-10-10",
"tipo_carteira": "B",
"celular":"15-45123654",
"cpf":"46512346465"
}

{
    "usuario": "46512346465",
    "senha": "vqrjtfyitw8905"
}

{

"relatorio": {
	"nome":"ozana"
},
"itens":[
    {
        "grau_emergencia":1,
        "descricao":"verificar óleo"
    },
    {
        "grau_emergencia":3,
        "descricao":"verificar pneu"
    },
    {
        "grau_emergencia":2,
        "descricao":"verificar luzes"
    }
]

}

{
}

{
    "kilometragem":1000,
    "data":"2020-11-17",
    "nota":8,
    "observacao":"pastinhas desgastadas"
}

{
    "viagem":{
        "origem": "Minas Gerais",
        "destino": "São Paulo",
        "carga": "alimentos",
        "data_inicio": "2020-11-18",
        "periodizacao_relatorio": 7,
        "funcionario":3,
        "veiculo":1,
        "empresa":2
    },
    "relatorio":6
}

datetime(day=(data_atual.day - timedelta(days=7)),month=data_atual.month,year=data_atual.year)

http post http://localhost:8000/api/token/ username=admin password=Zz_180141

http get http://localhost:8000/api/veiculos/ "Authorization: Bearer token"

http post http://localhost:8000/api/token/refresh/ refresh=token